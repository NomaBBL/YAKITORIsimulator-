# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1efKtrmAjbc4G3iVB-zubj_y8U3QcMHHh
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import random
# import streamlit as st
# 
# def simulate(n, fail_prob, y, trials=10000):
#     total_points = 0
#     success_prob = 100 - fail_prob
# 
#     for _ in range(trials):
#         remaining_trials = n
#         points = 0
#         evade_token = 0
# 
#         while remaining_trials > 0:
#             if evade_token == 0:
#                 evade_token += 1
#                 remaining_trials -= 1
#             else:
#                 if random.uniform(0, 100) < success_prob:
#                     points += y
#                     remaining_trials -= 1
#                 else:
#                     if evade_token > 0:
#                         evade_token -= 1
#                     else:
#                         remaining_trials -= 2
# 
#         total_points += points
# 
#     return total_points / trials
# 
# def compare_initial_choice(n, fail_prob, y, trials=10000):
#     success_prob = 100 - fail_prob
#     expected_A = simulate(n-1, fail_prob, y, trials) * (success_prob / 100) + simulate(n-2, fail_prob, y, trials) * (fail_prob / 100)
#     expected_B = simulate(n-1, fail_prob, y, trials)
# 
#     best_choice = "A" if expected_A > expected_B else "B"
#     return expected_A, expected_B, best_choice
# 
# st.title("最適な初回選択を計算")
# n = st.number_input("試行回数 (n)", min_value=1, value=3)
# fail_prob = st.number_input("失敗確率 (%)", min_value=0, max_value=100, value=16)
# y = st.number_input("獲得ポイント (y)", min_value=1, value=12)
# 
# if st.button("計算"):
#     expected_A, expected_B, best_choice = compare_initial_choice(n, fail_prob, y)
#     st.write(f"初回A選択時の期待値: {expected_A}")
#     st.write(f"初回B選択時の期待値: {expected_B}")
#     st.write(f"推奨される初回の選択: {best_choice}")
#